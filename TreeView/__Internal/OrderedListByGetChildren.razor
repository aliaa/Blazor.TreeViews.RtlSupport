@typeparam T
@inherits OrderedListBase<T>

<OrderedList Collapsed="Collapsed" Class="@Class">
    @foreach (var item in SortBy(Parental))
    {
        <ListItem @key="item" Context="ChildCollapsed" Item="item" Level="Level" HasChildren="TreeView.HasChildren(item)">
            @{
                var sub_items = GetChildren(item);
                sub_items = sub_items == null ? null : FilterBy(sub_items).ToList();
                if (sub_items != null)
                {
                    if (!TreeView.IsLazyLoading || !ChildCollapsed)
                    {
                        <OrderedListByGetChildren Level="Level + 1"
                                                  Collapsed="ChildCollapsed"
                                                  Parental="sub_items" GetChildren="GetChildren" />
                    }
                }
            }
        </ListItem>
    }
</OrderedList>
@code {
    [Parameter] public List<T> Parental { get; set; }
    [Parameter] public Func<T, List<T>> GetChildren { get; set; }
}
